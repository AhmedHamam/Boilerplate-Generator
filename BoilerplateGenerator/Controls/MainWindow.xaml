<Window x:Class="BoilerplateGenerator.Controls.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:converters="clr-namespace:BoilerplateGenerator.Converters"
        xmlns:templates="clr-namespace:BoilerplateGenerator.Templates"
        xmlns:viewModels="clr-namespace:BoilerplateGenerator.ViewModels"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
        xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModels:ViewModelBase, IsDesignTimeCreatable=False}"
        WindowState="Maximized"
        Title="Boilerplate Code Generator"
        Height="450"
        Width="800">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

        <converters:BooleanToInverseVisibilityConverter x:Key="BoolToInverseVisibilityConverter" />

        <converters:InverseVisibilityConverter x:Key="InverseVisibilityConverter" />

        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />

        <templates:EntityViewTemplateSelector x:Key="EntityViewTemplateSelector" />

        <templates:DirectoryViewTemplateSelector x:Key="DirectoryViewTemplateSelector" />
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Height="50">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label Content="Selected File"
                       Target="{Binding ElementName=TextEntity}"
                       VerticalContentAlignment="Center"
                       HorizontalContentAlignment="Center" />

                <TextBox x:Name="TextEntity"
                         Grid.Column="1"
                         VerticalAlignment="Center"
                         Margin="10,1,0,0"
                         IsReadOnly="True"
                         Text="{Binding ReferencedEntityName}" />
            </Grid>

            <Button Grid.Column="1"
                    VerticalAlignment="Center"
                    Margin="10,0"
                    Content="View Entity Hierarchy"
                    Command="{Binding ValidateSelectedFileCommand}" />
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Separator VerticalAlignment="Top"
                               Margin="0" />

                    <Label Content="Entity Hierarchy"
                           Target="{Binding ElementName=TreeEntity}"
                           VerticalContentAlignment="Center"
                           HorizontalContentAlignment="Left" />

                    <TreeView x:Name="TreeEntity"
                              Grid.Row="1"
                              ItemsSource="{Binding EntityTree}"
                              ItemTemplateSelector="{StaticResource EntityViewTemplateSelector}">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded"
                                        Value="True" />
                                <Setter Property="IsEnabled"
                                        Value="{Binding Current.IsEnabled}" />
                                <Setter Property="IsHitTestVisible"
                                        Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                                <Setter Property="IsTabStop"
                                        Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.Resources>
                            <HierarchicalDataTemplate x:Key="ClassSelector"
                                                      ItemsSource="{Binding Path=Children}">
                                <CheckBox IsChecked="{Binding Current.IsChecked, Mode=TwoWay}"
                                          Content="{Binding Current.Name}" />
                            </HierarchicalDataTemplate>
                            <DataTemplate x:Key="PropertySelector">
                                <CheckBox IsChecked="{Binding Current.IsChecked, Mode=TwoWay}">
                                    <CheckBox.Content>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock>
                                                <Run Text="{Binding Current.Name}" /><Run Text=" (Type: " /><Run Text="{Binding Current.Type}" /><Run Text=")" />
                                            </TextBlock>
                                            <TextBlock Text=" [Primary Key]"
                                                       FontWeight="Bold"
                                                       Visibility="{Binding Current.IsPrimaryKey, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}" />
                                            <TextBlock Text=" [Required]"
                                                       FontWeight="Bold"
                                                       Visibility="{Binding Current.IsRequired, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}" />
                                        </StackPanel>
                                    </CheckBox.Content>
                                </CheckBox>
                            </DataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                </Grid>

                <StackPanel Grid.Row="1"
                            Orientation="Vertical"
                            Background="#FFEEF5FD">
                    <Grid Margin="0,0,0,10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Label Content="Target Module"
                               Target="{Binding ElementName=ComboModule}"
                               VerticalContentAlignment="Center"
                               HorizontalContentAlignment="Left" />

                        <ComboBox x:Name="ComboModule"
                                  Margin="5,0"
                                  ItemsSource="{Binding AvailableModules}"
                                  SelectedItem="{Binding SelectedProject, Mode=TwoWay}"
                                  Grid.Row="1">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>

                    <Grid Margin="0,0,0,10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Separator VerticalAlignment="Top"
                                   Margin="0" />

                        <Label Content="Operations"
                               Target="{Binding ElementName=GridOperations}"
                               VerticalContentAlignment="Center"
                               HorizontalContentAlignment="Left" />

                        <Grid x:Name="GridOperations"
                              Grid.Row="1"
                              Margin="5,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <CheckBox Content="GET" />

                            <CheckBox Grid.Column="1"
                                      Content="POST" />

                            <CheckBox Grid.Column="2"
                                      Content="PUT" />

                            <CheckBox Grid.Column="3"
                                      Content="DELETE" />
                        </Grid>

                    </Grid>

                    <Grid>
                        <Separator VerticalAlignment="Top"
                                   Margin="0" />

                        <Button Content="Generate Code"
                                Margin="5,10"
                                Command="{Binding GenerateCodeCommand}" />
                    </Grid>
                </StackPanel>
            </Grid>

            <GridSplitter Grid.Column="1"
                          ResizeDirection="Columns"
                          HorizontalAlignment="Stretch" />

            <Grid Grid.Column="2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Separator VerticalAlignment="Top"
                               Margin="0" />

                    <Label Content="Directory Structure"
                           Target="{Binding ElementName=TreeDirectory}"
                           VerticalContentAlignment="Center"
                           HorizontalContentAlignment="Left" />

                    <TreeView x:Name="TreeDirectory"
                              Grid.Row="1"
                              ItemsSource="{Binding DirectoriesTree}"
                              ItemTemplateSelector="{StaticResource DirectoryViewTemplateSelector}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectedItemChanged">
                                <i:InvokeCommandAction x:Name="SelectionCommand"
                                                       Command="{Binding ShowCodeFileOnItemSelected}"
                                                       CommandParameter="{Binding ElementName=TreeDirectory, Path=SelectedItem}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded"
                                        Value="True" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.Resources>
                            <HierarchicalDataTemplate x:Key="DirectorySelector"
                                                      ItemsSource="{Binding Path=Children}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <imaging:CrispImage Width="16"
                                                        Height="16"
                                                        Moniker="{x:Static catalog:KnownMonikers.FolderOpened}" />
                                    <TextBlock Grid.Column="1"
                                               Padding="4,2"
                                               Text="{Binding Current.AssetName}"
                                               VerticalAlignment="Center" />
                                </Grid>
                            </HierarchicalDataTemplate>
                            <DataTemplate x:Key="FileSelector">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <imaging:CrispImage Width="16"
                                                        Height="16"
                                                        Moniker="{x:Static catalog:KnownMonikers.CSFileNode}" />
                                    <TextBlock Grid.Column="1"
                                               Padding="4,2"
                                               Text="{Binding Current.AssetName}"
                                               VerticalAlignment="Center" />
                                </Grid>
                            </DataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                </Grid>
            </Grid>

            <GridSplitter Grid.Column="3"
                          ResizeDirection="Columns"
                          HorizontalAlignment="Stretch" />

            <Grid Grid.Column="4">
                <DockPanel>
                    <ToolBar DockPanel.Dock="Top">
                        <ToolBar.Resources>
                            <Style TargetType="{x:Type imaging:CrispImage}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}"
                                                 Value="False">
                                        <Setter Property="Opacity"
                                                Value="0.30" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToolBar.Resources>
                        <Button Command="Cut">
                            <imaging:CrispImage Width="16"
                                                Height="16"
                                                Moniker="{x:Static catalog:KnownMonikers.Cut}" />
                        </Button>
                        <Button Command="Copy">
                            <imaging:CrispImage Width="16"
                                                Height="16"
                                                Moniker="{x:Static catalog:KnownMonikers.Copy}" />
                        </Button>
                        <Button Command="Paste">
                            <imaging:CrispImage Width="16"
                                                Height="16"
                                                Moniker="{x:Static catalog:KnownMonikers.Paste}" />
                        </Button>
                        <Button Command="Delete">
                            <imaging:CrispImage Width="16"
                                                Height="16"
                                                Moniker="{x:Static catalog:KnownMonikers.TestCoveredFailing}" />
                        </Button>
                        <Separator />
                        <Button Command="Undo">
                            <imaging:CrispImage Width="16"
                                                Height="16"
                                                Moniker="{x:Static catalog:KnownMonikers.Undo}" />
                        </Button>
                        <Button Command="Redo">
                            <imaging:CrispImage Width="16"
                                                Height="16"
                                                Moniker="{x:Static catalog:KnownMonikers.Redo}" />
                        </Button>
                        <Separator />
                        <CheckBox IsChecked="{Binding ElementName=SyntaxHighliter, Path=WordWrap}">
                            <imaging:CrispImage Width="16"
                                                Height="16"
                                                Moniker="{x:Static catalog:KnownMonikers.WordWrap}" />
                        </CheckBox>
                        <CheckBox IsChecked="{Binding ElementName=SyntaxHighliter, Path=ShowLineNumbers}">
                            <imaging:CrispImage Width="16"
                                                Height="16"
                                                Moniker="{x:Static catalog:KnownMonikers.ThisLine}" />
                        </CheckBox>
                        <CheckBox IsChecked="{Binding ElementName=SyntaxHighliter, Path=Options.ShowEndOfLine}">
                            <imaging:CrispImage Width="16"
                                                Height="16"
                                                Moniker="{x:Static catalog:KnownMonikers.DocumentOutline}" />
                        </CheckBox>
                    </ToolBar>
                    <avalonEdit:TextEditor x:Name="SyntaxHighliter"
                                           Document="{Binding HighlitedGeneratedCode}"
                                           WordWrap="True"
                                           ShowLineNumbers="True"
                                           FontFamily="Consolas"
                                           Focusable="True"
                                           ForceCursor="True"
                                           SyntaxHighlighting="C#">
                    </avalonEdit:TextEditor>
                </DockPanel>
            </Grid>

        </Grid>
    </Grid>
</Window>
